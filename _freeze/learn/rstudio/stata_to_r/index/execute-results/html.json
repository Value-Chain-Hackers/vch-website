{
  "hash": "eb00047c3a1ece8d770a004101d2b25d",
  "result": {
    "markdown": "---\ntitle: '{{< animate fadeInDown \"Making the Transition: A Guide for Switching from Stata to R\"delay=.6s >}}'\nsubtitle: '{{< animate fadeInDown \"If you use Stata for your analysis, but you want to switch to the R world, this is your guide for it.\"delay=.6s >}}'\nauthor: [\"Jorge Roa\"]\ndate: \"04-23-2023\"\ncategories: [\"R\", \"Stata\", \"Transition\"]\ntoc: true\ndraft: false\ncode-link: true\ntitle-block-banner: true\nimage: images/rstudio_stata.png\ninclude-in-header: meta.html\n---\n\n\n<style>\n\ndiv.sourceCode {\n  font-size: .7em;\n}\n\n</style>\n\n\n![](images/rstudio_stata.png){fig-align=\"center\"}\n\n------------------------------------------------------------------------\n\nWho doesn't remember their first love? In my case, in the coding world, my first love was Stata. I clearly remember my first job as a research assistant to Laura Atuesta. Learning Stata implied an important learning curve since this language was used in my university for my classes, my work, and research. I did my bachelor's thesis with Stata, and, being honest, I just have great memories using Stata because it was the first time that I've feel capable of doing multiple things. There my curiosity for data science and coding started. However, like any other Story love (that may be doesn't end well), I met R. I would say with this language my interest and passion for coding exploded. Since then, I stopped using Stata and fall in love completely for R. Syntaxis, open-source building community and the approach that you can have with this language are just one of the multiple reasons why I decided to keep learning with R. It doesn't matter what happens, Stata will be always in the bottom of my heart and my first love since it was the first coding language that I learned.\n\nBecause of this and because I know that different people and scholars are using Stata and they are curious about what R offers, here is an essential guide of commands for doing some data wrangling, analysis, and running some models. Of course, I don't cover plenty of things, but this is just to show the differences between using R and Stata. I'm sorry if I don't use the new Stata approaches since I learned the version 11º or 12º and now the are in the 17º version, however, the commands still can be useful. \n\n\n \n\n# Working directory\n\n------------------------------------------------------------------------\n\n::: columns\n::: {.column width=\"45%\"}\n![](images/stata.png){fig-align=\"center\" height=\"34\"}\n\n``` stata\n/*Working directory path*/\npwd \n\n/*Changes the working directory path*/\ncd c:\\myfolder\\data \n\n```\n:::\n\n::: {.column width=\"10%\"}\n![](images/arrow.png){fig-align=\"center\" height=\"40\"}\n:::\n\n::: {.column width=\"45%\"}\n![](images/studio.png){fig-align=\"center\" height=\"34\"}\n\n::: {.cell}\n\n```{.r .cell-code}\n#Working directory path\ngetwd()\n\n#Changes the working directory path\nsetwd(\"my_path\") \n```\n:::\n\n:::\n:::\n\n\n \n\n# Packages\n\n------------------------------------------------------------------------\n\n::: columns\n::: {.column width=\"45%\"}\n![](images/stata.png){fig-align=\"center\" height=\"34\"}\n\n``` stata\n/*Install package*/\nssc install abc\n\n\n\n```\nOnce is installed, we don't need to \"load it\"\n\n:::\n\n::: {.column width=\"10%\"}\n![](images/arrow.png){fig-align=\"center\" height=\"40\"}\n:::\n\n::: {.column width=\"45%\"}\n![](images/studio.png){fig-align=\"center\" height=\"34\"}\n\n::: {.cell}\n\n```{.r .cell-code}\n#Working directory path\ninstall.packages(\"tidyverse\")\n\n#Load library\nlibrary(tidyverse)\n```\n:::\n\n:::\n:::\n\n \n\n\n# Help\n\n------------------------------------------------------------------------\n\n::: columns\n::: {.column width=\"45%\"}\n![](images/stata.png){fig-align=\"center\" height=\"34\"}\n\n``` stata\n/*Get help with the command regression*/\nhelp regress\n\n\n```\n\n:::\n\n::: {.column width=\"10%\"}\n![](images/arrow.png){fig-align=\"center\" height=\"40\"}\n:::\n\n::: {.column width=\"45%\"}\n![](images/studio.png){fig-align=\"center\" height=\"34\"}\n\n::: {.cell}\n\n```{.r .cell-code}\n#Help with mutate function from dplyr package\n?mutate()\n```\n:::\n\n:::\n:::\n\n\n \n\n\n# Load Data\n\n------------------------------------------------------------------------\n\n \n\n## CSV Files\n\n::: columns\n::: {.column width=\"45%\"}\n![](images/stata.png){fig-align=\"center\" height=\"34\"}\n\n``` stata\n/*Import csv file*/\nimport delimited \"my_data.csv\", clear\n\n\n\n```\n\n:::\n\n::: {.column width=\"10%\"}\n![](images/arrow.png){fig-align=\"center\" height=\"40\"}\n:::\n\n::: {.column width=\"45%\"}\n![](images/studio.png){fig-align=\"center\" height=\"34\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\n\n#Use read_csv2\ndf_data <- read_csv2(\"data.csv\")\n\n#Using read.table function with comma separator\ndf_data <- read.table(\"my_data.csv\", \n                      sep = \",\", \n                      header = TRUE)\n```\n:::\n\n:::\n:::\n\n \n\n## Excel Files\n\n::: columns\n::: {.column width=\"45%\"}\n![](images/stata.png){fig-align=\"center\" height=\"34\"}\n\n``` stata\n/*Import excel file*/\nimport excel \"df_data.xlsx\", \nsheet(\"Sheet1\") firstrow clear\n\n```\n\n:::\n\n::: {.column width=\"10%\"}\n![](images/arrow.png){fig-align=\"center\" height=\"40\"}\n:::\n\n::: {.column width=\"45%\"}\n![](images/studio.png){fig-align=\"center\" height=\"34\"}\n\n::: {.cell}\n\n```{.r .cell-code}\n#With readxl package\nlibrary(readxl)\ndf_data <- read_excel(\"my_data.xlsx\", \n                      sheet = \"Sheet1\")\n\n#With openxlsx package\nlibrary(openxlsx)\ndf_data <- read.xlsx(\"my_data.xlsx\", \n                     sheet = \"Sheet1\")\n```\n:::\n\n:::\n:::\n\n \n\n## Stata Files (.dta)\n\n::: columns\n::: {.column width=\"45%\"}\n![](images/stata.png){fig-align=\"center\" height=\"34\"}\n\n``` stata\n/*Import excel file*/\nuse \"df_data.dta\", clear\n\n```\n\n:::\n\n::: {.column width=\"10%\"}\n![](images/arrow.png){fig-align=\"center\" height=\"40\"}\n:::\n\n::: {.column width=\"45%\"}\n![](images/studio.png){fig-align=\"center\" height=\"34\"}\n\n::: {.cell}\n\n```{.r .cell-code}\n#Load the package\nlibrary(haven)            \n\ndf_data <- read_dta(\"df_data.dta\")\n```\n:::\n\n:::\n:::\n\n\n \n\n\n# Explore Data\n\n------------------------------------------------------------------------\n\nRemember the difference between R and Stata. While in R you need to specify which object (or data) you want to work with, in Stata, the variables are loaded, so it's easier to work with them. \n\n\n\n\n::: columns\n::: {.column width=\"45%\"}\n![](images/stata.png){fig-align=\"center\" height=\"34\"}\n\n``` stata\n/* Provides the structure of the dataset */\ndescribe\n\n/*Basic descriptive statistics */\nsummarize variable1 variable2\n\n/*Lists the variables in the dataset */\nds\n\n/* First 10 observations */\nlist in 1/10 \n\n/* Last 10 observations */\nlist in -1/10\n\n/* Show first 10 observations of the */\n/*  first three variables of our data */\nlist var1-var3 in 1/10\n\n\n\n\n\n\n/*View data */\nbrowse \n\n```\n\n:::\n\n::: {.column width=\"10%\"}\n![](images/arrow.png){fig-align=\"center\" height=\"40\"}\n:::\n\n::: {.column width=\"45%\"}\n![](images/studio.png){fig-align=\"center\" height=\"34\"}\n\n::: {.cell}\n\n```{.r .cell-code}\n#Provides the structure of our data \nstr(df_data)\n\n#Basic descriptive statistics\nsummary(df_data)\n\n#Lists the variables of our data \nnames(df_data)\n\n#Show first 10 observations of our data \nhead(df_data, n = 10)\n\n#Show last 10 observations of our data \ntail(df_data, n = 10)\n\n#Show first 10 observations of the \n# first three variables of our data \ndf_data[1:10, 1:3]\n\n# With dplyr, this would be other option\nlibrary(dplyr)\ndf_data %>% slice(1:10) %>% select(1:3)\n\n#View data\nView(df_data) \n```\n:::\n\n:::\n:::\n\n\n \n\n## Missing Data\n\n\n::: columns\n::: {.column width=\"45%\"}\n![](images/stata.png){fig-align=\"center\" height=\"34\"}\n\n``` stata\n/* Provides the structure of the dataset */\nmissing variable1 variable2 variable3\n\n\n```\n\n:::\n\n::: {.column width=\"10%\"}\n![](images/arrow.png){fig-align=\"center\" height=\"40\"}\n:::\n\n::: {.column width=\"45%\"}\n![](images/studio.png){fig-align=\"center\" height=\"34\"}\n\n::: {.cell}\n\n```{.r .cell-code}\n#Check missing data for our entire database\nis.na(df_data)\n\n#Check missing data for our entire database\nis.na(df_data$variable1)\n```\n:::\n\n:::\n:::\n\n\n \n\n## Rename variables\n\n\n::: columns\n::: {.column width=\"45%\"}\n![](images/stata.png){fig-align=\"center\" height=\"34\"}\n\n``` stata\n/* How to rename */\nrename oldname newname\n\nrename lastname lastname2\nrename firstname firstname2\nrename studentstatus studentstatus2\nrename averagescoregrade avgscore\n\n\n```\n\n:::\n\n::: {.column width=\"10%\"}\n![](images/arrow.png){fig-align=\"center\" height=\"40\"}\n:::\n\n::: {.column width=\"45%\"}\n![](images/studio.png){fig-align=\"center\" height=\"34\"}\n\n::: {.cell}\n\n```{.r .cell-code}\n#Rename the variables of our data\nnames(df_data) <- c(\"newvar1\", \"newvar2\")\n\n#With the dplyr package\n\nlibrary(dplyr)\ndf_data_final <- rename(df_data, \n                        newvar1 = var1, \n                        newvar2 = var2)\n```\n:::\n\n:::\n:::\n\n\n \n\n## Label variables\n\n\n::: columns\n::: {.column width=\"45%\"}\n![](images/stata.png){fig-align=\"center\" height=\"34\"}\n\n``` stata\nlabel variable w \"Weight\"\nlabel variable y \"Output\"\nlabel variable x1 \"Predictor 1\"\nlabel variable x2 \"Predictor 2\"\nlabel variable age \"Age\"\nlabel variable sex \"Gender\"\n\n```\n\n:::\n\n::: {.column width=\"10%\"}\n![](images/arrow.png){fig-align=\"center\" height=\"40\"}\n:::\n\n::: {.column width=\"45%\"}\n![](images/studio.png){fig-align=\"center\" height=\"34\"}\n\n::: {.cell}\n\n```{.r .cell-code}\n#Load labelled package\nlibrary(labelled)\n\n#Define the value labels for the codes\nlabels <- c(\"Option 1\", \"Option 2\", \n            \"Option 3\", \"Option 4\", \n            \"Option 5\")\ndf_data$code <- labelled(df_data$code, \n                         labels = labels)\n```\n:::\n\n:::\n:::\n\n \n\n## Value labels\n\n\n::: columns\n::: {.column width=\"45%\"}\n![](images/stata.png){fig-align=\"center\" height=\"34\"}\n\n``` stata\n/* Value labels for the codes */\nlabel define label1 1 \"Option 1\" \n2 \"Option 2\" 3 \"Option 3\" 4 \"Option 4\" \n5 \"Option 5\"\n\n/* Assign the value labels to the codes */\nlabel values code label1\n\n```\n\n:::\n\n::: {.column width=\"10%\"}\n![](images/arrow.png){fig-align=\"center\" height=\"40\"}\n:::\n\n::: {.column width=\"45%\"}\n![](images/studio.png){fig-align=\"center\" height=\"34\"}\n\n::: {.cell}\n\n```{.r .cell-code}\n#Load labelled package\nlibrary(labelled)\n\n#Define the value labels for the codes\nlabels <- c(\"Option 1\", \"Option 2\", \n            \"Option 3\", \"Option 4\", \n            \"Option 5\")\ndf_data$code <- labelled(df_data$code, \n                         labels = labels)\n\n\n#Define the value labels for the codes\nlabels <- c(\"Option 1\", \"Option 2\", \n            \"Option 3\", \"Option 4\", \n            \"Option 5\")\ndf_data$code <- factor(df_data$code, \n                       levels = 1:5, \n                       labels = labels)\n```\n:::\n\n\nIn this approach, you can assign values to numeric or character variables\n:::\n:::\n\n\n \n\n## Group variables\n\n\n::: columns\n::: {.column width=\"45%\"}\n![](images/stata.png){fig-align=\"center\" height=\"34\"}\n\n``` stata\n/* Value labels for the codes */\ncollapse (mean) var1, by(var2, var3)\n\nlist var2 var3 var1\n```\n\n:::\n\n::: {.column width=\"10%\"}\n![](images/arrow.png){fig-align=\"center\" height=\"40\"}\n:::\n\n::: {.column width=\"45%\"}\n![](images/studio.png){fig-align=\"center\" height=\"34\"}\n\n::: {.cell}\n\n```{.r .cell-code}\n#Load dplyr package\nlibrary(dplyr)\n\n#We group the data by variables 2 and 3, \n#calculate the mean of variable 1\ndf_data_group <- df_data %>%\n  group_by(var2, var3) %>%\n  summarise(mean_var1 = mean(var1))\n```\n:::\n\n\n:::\n:::\n\n \n\n## Merge two datasets\n\n\n::: columns\n::: {.column width=\"45%\"}\n![](images/stata.png){fig-align=\"center\" height=\"34\"}\n\n``` stata\n/* Value labels for the codes */\ncollapse (mean) var1, by(var2, var3)\n\nlist var2 var3 var1\n```\n\n:::\n\n::: {.column width=\"10%\"}\n![](images/arrow.png){fig-align=\"center\" height=\"40\"}\n:::\n\n::: {.column width=\"45%\"}\n![](images/studio.png){fig-align=\"center\" height=\"34\"}\n\n::: {.cell}\n\n```{.r .cell-code}\n#Load dplyr package\nlibrary(dplyr)\n\n#We group the data by variables 2 and 3, \n#calculate the mean of variable 1\ndf_data_group <- df_data %>%\n  group_by(var2, var3) %>%\n  summarise(mean_var1 = mean(var1))\n```\n:::\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}