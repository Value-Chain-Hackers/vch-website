[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "",
    "section": "",
    "text": "A Web Developer\n    I am a web developer and I love to create websites.\n  \n  Learn More\n\n\n\n  \n    \n      Projects\n      I have worked on many projects and I am very proud of them. I am a very good developer and I am always looking for new projects.\n  \n  \n    \n      Skills\n      I have a lot of skills and I am very good at them. I am very good at programming and I am always looking for new skills.\n  \n\n  \n    \n      About Me\n      I am a web developer and I love to create websites. I am a very good developer and I am always looking for new projects. I am a very good developer and I am always looking for new projects."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html#agenda-for-today",
    "href": "index.html#agenda-for-today",
    "title": "Hertie Coding Club",
    "section": "Agenda for today",
    "text": "Agenda for today\n\n\n\nObjective of the club. Why this club?\nWho we are?\nMotivation\nDinamic of the sessions\nSlack\nGitHub and GitHub Desktop\nR and RStudio\n\n\n\nCustomize our RStudio appearance\nCreate our first project\nRStudio elements\nWorking directory\nPackages\nObjects\nSummary\nNext session\n\n\n\n\n\n\n(Re) Introduction to R"
  },
  {
    "objectID": "Presentation/(Re) Introduction to R.html",
    "href": "Presentation/(Re) Introduction to R.html",
    "title": "Hertie Coding Club",
    "section": "",
    "text": "Objective of the club. Why this club?\n\n\nObjective of the club. Why this club?\n\n\n<9f><92> Data is a relevant trend and us, as future policy makers, must have those skills.\n\n\n\n<9f><91><80><8d><9f><94> Programming: You are developing your problem-solving skills. The time you spend learning how to code and resolving code problems makes us think more logically.\n\n\n\n<9f><93> Gap: A lot of people want to learn code, but you must take Stats I and Stats II to have the right to apply to the Introduction to Data Science Course. Why should we not start learning from the first semester?\n\n\n\n<9f><9a><82> Democratize learning code: No matter if you are from the MPP, MIA, or another program, everyone should learn how to code and possess those abilities; we must exploit our potential.\n\n\n\nWho are we?\n    \n\n\nWho are we?\n\nInstructors\n\n\n\n\n\n\n\n\n\nGabriel Zech\n\nMDS 2023\n\nProject Manager\n\n(Data Science Lab) Bertelsmann Stiftung\n\n\n\n\n\n\n\n\nCarmen Garro\n\nMDS\n\n2024\n\n\n\n\n\n\n\n\nJorge Roa\n\nMDS\n\n2024\n\n\n\n\n\n\n\n\nLukas Warode\n\nMDS 2023\nData Researcher\n\nPOLITICO\n\n\n\n\n\n\n\n\nRodrigo Dornelles\n\nMDS\n\n2024\n\n\n\n\n\nWho are we?\n\nCommunications\n\n\n\n\n\n\n\n\n\n\n\n\nIleana Marroquin (MPP 2023)\nCoordinator alligator\n\n\n\n\n\n\n\n\n\n\n\nRidhima Singh (MPP 2024)\nCoordinator alligator\n\n\n\n\n\n\n\n\n\n\n\nMary Nguyen (MPP 2023)\nCelebrity promoter (Social Media)\n\n\n\n\n\n\n\n\n\n\n\nChhengpor Aun (MIA 2024)\nCelebrity promoter (Social Media)\n\n\n\n\n\n\n\n\n\n\n\nLisa Bewermeier (MPP 2024)\nCelebrity promoter (Social Media)\n\n\n\n\n\n\n\n\n\n\n\nNatascha Schoepl (MPP 2023)\nCentral office emissary\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbigail Pena Alejos (MPP 2023)\nCentral office emissary\n\n\n\n\n\n\n\n\n\n\n\nKaja Buxrud (MPP 2024)\nPromotion emotion\n\n\n\n\n\n\n\n\n\n\n\n\nIssac John (MPP 2024)\nPromotion emotion\n\n\n\n\n\n\n\n\n\n\n\n\nFernando Segovia (MIA 2024)\nPromotion emotion\n\n\n\n\n\n\n\n\n\n\n\nAayran Salman (MPP 2024)\nCanva Wizard\n\n\n\n\n\n\n\n\nMotivation\n\n\nMotivation\n\n\n\nThis was my first graph in R\n\n\n\n\n\n\n\n\nHow I improved\n\n\n\n\n\n\n\n\n\n\nMotivation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMotivation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhat is the key to learn how to code\n  \n\n\n\n\n\n\n\n\n\nLearning a new thing can be difficult sometimes.\nGetting errors can be scary: don’t worry, we are here for you.\nIn my opinion: the more errors you get, the better. Why? Because you learn from those errors. (It doesn’t apply to real life :p)\nFrom my own experience: patience.\nThe goal of the club is help us each other learn how to code.\n\n\n\n\n\nDinamic of the sessions\n\n\nDinamic of the sessions\n \n\n\n\n\n\n\n\n\n\nIn the short run, we will have sessions for introduction to R (weekly)\nWe hope this semester, we can have specific sessions for advanced R users and other languages (Python, SQL).\nWe will record the sessions for future reference.\n\n\n\n\n\nSlack\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPermanent platform for Hertie Community\nLike a WhatsApp for code.\nShare code, share files, and ask questions.\nOne of the most popular platforms in the data science world.\n\n\n\n\n\nGitHub and GitHub Desktop\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWebsite and cloud-based service to store and manage code\nGit IDE: used in the programming world. It is used for tracking changes in the source code during software development.\nIt makes it easier for individuals and teams to use Git for version control and collaboration.\n\n\n\n\n\nR and RStudio\n\n\nR and RStudio\n\n\nWhy R?\n\nOpen source\nOne of the most used language programs in the world\nWorks for every type of data (shape and sizes)\nEasy to learn it (We will help you with that)\nMore than 18,000 packages\n\n\n\n\n\n\n\n\n\n\n\nCustomize our RStudio appearance\n\n\nCustomize our RStudio appearance\n\n\n\n\n\n\n\n\nWelcome to RStudio\n\nFirst window that appears when you open RStudio\nLet’s change the appearance of RStudio\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCustomize our RStudio appearance\n\n\n\n\n\n\n\nBlue is my favorite color. For me looks awesome! What about you?\n\n\n\n\nCreate our first project\n\n\nCreate our first project (Step 1)\n\n\n\n\n\n\n\n\nGo to the next steps:\n\nCreate a new directory (Where we will store our project)\nSelect “New Project”\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCreate our first project (Step 2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGo to the next steps:\n\nSelect again New Project\nChoose the path where you want to create your project (It should be a folder)\n\n\n\n\n\n\n\n\n\n\nWorking directory (How we load and save things in R)\n\n\n\n\n\n\n\n Go to the next steps:\n\ndata/: for processed data\ndata-raw/: for raw data and intermediate datasets (Internet, f.e.)\nfigures/: for save your plots\nanalysis/: for save your scripts\ndocuments/: for outlines, drafts, other text\nR/: for functions\n\n\n\nAlarid et. al. (2019)\n\n\n\n\n\n\n\n\n\nYOU ARE READY\n\n\n\n\n\n\n\nRStudio\nCreate a script (This is the place where we write code)\n\n\n\n\n\n\n\n\nGo to the next steps:\n\nIn the file section, create an R script\nSave inside your analysis folder\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSource\nThe source pane is where you create and edit R Scripts\n\n\n\n\n\n\n\n\n\n“Command + Return” on Mac, or “Control + Enter” on PC to send all highlighted code to the console.\nSave it inside your analysis folder\n\n\n\n\n\n\n\n\n\n\nConsole\nThe console is the heart of R.\n\n\n\n\n\n\n\n\n\nHere R actually evaluates your code\nTry to write most of your code in a document in the Source. Only type directly into the Console to de-bug or do quick analyses.\nWhen ready: > and If waiting: +\nCancel commands by pressing Esc.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEnvironment/History\nThe Environment tab of this panel shows you the names of all the data objects\n\n\n\n\n\n\n\n\n\nYou can also see information like the number of observations and rows in data objects\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFiles and more\nThe Files / Plots / Packages / Help panel shows you lots of helpful information\n\n\n\n\n\n\n\n\n\nFiles - The files panel gives you access to the file directory on your hard drive.\nPlots - The Plots panel shows all your plots.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPackages\n\n\nPackages\n\n\nWhy R?\n\nPackages in R Programming language are a set of R functions, compiled code, and sample data. These are stored under a directory called “library” within the R environment.\nR packages provide a simple way to distribute R code and documentation.\nPackages are the fundamental units of reproducible R code. They include reusable R functions, the documentation that describes how to use them, and sample data\nMore than 18,000 packages\nExtends the capacity of R and allows us to do much more\n\n\n\n\n\n\n\n\n\n\n\nHow we install packages\nThe easy way\n\n\n\n\n\n\n\n\n\nGo to the “Packages” tab\nPress the “Install” button\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHow we install packages\nThe easy way\n\n\n\n\n\n\n\n\n\nOther way is type in the console\n\ninstall.packages(“tidyverse”)\n\n\n\n\n\n\n\n\n\n\nObjects\n\n\nObjects\n\n\nWhy objects?\n\nR works with objects (vectors, dataframes, lists, numbers, etc)\nTo do useful and interesting things in R, we need to assign values to objects.\nTo create an object, give it a name followed by the assignment operator, followed by the value.\nAssignment operator <-\nCan also use = but not recommended\nShortcut: “Alt + -” on PC, “Option + -” on Mac\n\n\nx <- 2 + 2\n\nx\n\n[1] 4\n\n\n\n\n\n\n\n\n\n\n\n\nType of objects\nThere are 5 basic types of objects in the R language:\n\n\n\nAtomic vectors are one of the basic types of objects in R programming. Atomic vectors can store homogeneous data types such as character, doubles, integers, raw, logical, and complex.\nList is another type of object in R programming. List can contain heterogeneous data types such as vectors or another lists.\n\n\n#Numeric vector\nnumbers <- c(1, 2, 3, 4)\n\n#String vector\ncharacters <- c(\"a\", \"b\", \"c\", \"d\")\n\n#Numeric value\nvalue <- 5\n\n#List\nmy_list <- list(c(1, 2, 3, 4), list(\"a\", \"b\", \"c\"))\n\n\n\nprint(numbers)\n\n[1] 1 2 3 4\n\nprint(characters)\n\n[1] \"a\" \"b\" \"c\" \"d\"\n\nprint(value)\n\n[1] 5\n\nprint(my_list)\n\n[[1]]\n[1] 1 2 3 4\n\n[[2]]\n[[2]][[1]]\n[1] \"a\"\n\n[[2]][[2]]\n[1] \"b\"\n\n[[2]][[3]]\n[1] \"c\"\n\n\n\n\n\n\nMore type of objects\n\n\n\nMatrices: To store values as 2-Dimensional array, matrices are used in R. Data, number of rows and columns are defined in the matrix() function.\nFactors: Factor object encodes a vector of unique elements (levels) from the given data vector.\nArrays: array() function is used to create n-dimensional array. This function takes dim attribute as an argument and creates required length of each dimension as specified in the attribute.\n\n\n\nx <- c(1, 2, 3, 4, 5, 6)\n  \n# Matrix\nmat <- matrix(x, nrow = 2)\n\n# Matrix\ns <- c(\"spring\", \"autumn\", \"winter\", \"summer\", \n\"spring\", \"autumn\")\n  \narr <- array(c(1, 2), dim = c(3, 3))\n\n\nprint(mat)\n\n     [,1] [,2] [,3]\n[1,]    1    3    5\n[2,]    2    4    6\n\nprint(factor(s))\n\n[1] spring autumn winter summer spring autumn\nLevels: autumn spring summer winter\n\nprint(nlevels(factor(s)))\n\n[1] 4\n\nprint(arr)\n\n     [,1] [,2] [,3]\n[1,]    1    2    1\n[2,]    2    1    2\n[3,]    1    2    1\n\n\n\n\n\n\nFinally: dataframes\n\n\n\nData frames are 2-dimensional tabular data object in R programming.\nData frames consists of multiple columns and each column represents a vector.\nColumns in data frame can have different modes of data unlike matrices.\n\n\n\n# Create vectors\nwho <- c(\"Mom\", \"Sister\", \"Myself\", \"Dad\", \"Brother\", \"Brother\", \"Our dog (:\")\nage <- c(58, 17, 25,60, 29, 27, 5)\nnames <- c(\"Carmen\", \"Fernanda\", \"Jorge\", \"Arturo\", \"Ale\", \"Eduardo\", \"Rocky\")\n  \n# Create data frame of vectors\ndf_my_family <- data.frame(who, age, names)\n\n\nprint(df_my_family)\n\n         who age    names\n1        Mom  58   Carmen\n2     Sister  17 Fernanda\n3     Myself  25    Jorge\n4        Dad  60   Arturo\n5    Brother  29      Ale\n6    Brother  27  Eduardo\n7 Our dog (:   5    Rocky\n\n\n\n\n\n\nNow it’s your turn\n\n\nExercise\n\n\n\nCreate a dataframe of your family with multiple vectors.\nInclude age, position (mom, dad, etc), their names and their birthdays.\nHint:\n\n\n# Create vectors\nwho <- c()\nage <- c()\nnames <- c()\nbirthday <- \"?\"\n  \n# Create data frame of vectors\ndf_my_family <- data.frame(\"Here you put your vectors\")\n\nREMEMBER: They must have the same length.\n\n\n\n\n\n\n\n\n\n\nSummary\n\n\n\nCustomize our RStudio appearance\nCreate our first project\nRStudio elements\nWorking directory\nPackages\nObjects\nSummary\nNext session\n\n\n\n\n\n\n\n\n\n\n\nNext session\n\n\n\nBase R\nLoad and save objects\nPipelines\nTidyverse\nAnd more…\n\n\n\nSame channel (Forum)\nSame day and hour Friday, November 11 (14:00 hrs - 16:00 hrs)\nJoin Slack if you haven’t.\nUse Slack for questions.\nFollow us in our social media:\n<9f><93> Instagram: hertiecodingclub\n<9f><90> Twitter: @HertieCodingCLB\n\n\n\n\n\nThanks for your time and welcome\n\n\n\n\n\nRemember that everybody can learn how to code!!\n\n 1200 lines of code where created for this presentation."
  },
  {
    "objectID": "members.html",
    "href": "members.html",
    "title": "Members",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2\n\n\n\n# Load the ggplot2 package\nlibrary(ggplot2)\nlibrary(extrafont)\n\nRegistering fonts with R\n\nlibrary(showtext)\n\nLoading required package: sysfonts\n\n\nLoading required package: showtextdb\n\n\n\nAttaching package: 'showtextdb'\n\n\nThe following object is masked from 'package:extrafont':\n\n    font_install\n\nshowtext.auto()\n\n'showtext.auto()' is now renamed to 'showtext_auto()'\nThe old version still works, but consider using the new function in future code\n\n#extrafont::choose_font(\"Arial\")\n\n# Create some example data\nx <- 1:10\ny <- x^2\n\n# Create the plot\nggplot(data = data.frame(x, y), aes(x = x, y = y)) +\n  geom_line() + theme(text = element_text(family = \"Arial\", size = 20))\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\n'Arial' not found, will use 'sans' instead\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Arial' not found, will use 'sans' instead\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Arial' not found, will use 'sans' instead\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Arial' not found, will use 'sans' instead\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily 'Arial' not found, will use 'sans' instead\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Arial' not found, will use 'sans' instead\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family 'Arial' not found, will use 'sans' instead\n\n\n\n\n\n\n\n\n\nWho are we?\ntrgrtgrtg\n\nWhen the moon hits your eye\n\n\n\n\n\n\nA Lovely Image\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAnother Lovely Image\n\n\n\n\n\n\n\nThe Last Lovely Image\n\n\n\n\n\n \n\n damoncroberts\n DamonCharlesRoberts\n Wednesdays from 12:15 - 2:15 pm Mountain\n Ketchum Arts & Sciences, Office 382, Boulder, CO 80309\nSome text\nReturn to the top!"
  },
  {
    "objectID": "r.html",
    "href": "r.html",
    "title": "R",
    "section": "",
    "text": "About this site\n\n1 + 1 \n\n[1] 2"
  },
  {
    "objectID": "Presentation/(Re) Introduction to R.html#agenda-for-today",
    "href": "Presentation/(Re) Introduction to R.html#agenda-for-today",
    "title": "Hertie Coding Club",
    "section": "Agenda for today",
    "text": "Agenda for today\n\n\n\nObjective of the club. Why this club?\nWho we are?\nMotivation\nDinamic of the sessions\nSlack\nGitHub and GitHub Desktop\nR and RStudio\n\n\n\nCustomize our RStudio appearance\nCreate our first project\nRStudio elements\nWorking directory\nPackages\nObjects\nSummary\nNext session"
  },
  {
    "objectID": "learn.html",
    "href": "learn.html",
    "title": "Learn",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "learn/rstudio.html",
    "href": "learn/rstudio.html",
    "title": "Bea Milz",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\n\nUnlock the power of data analysis and statistical computing with R and RStudio! Whether you are a student of public policy or a seasoned professional.\n\n\n\n\nR\n\n\nRStudio\n\n\nAccesibility\n\n\nInstall\n\n\n \n\n\n\n\nMar 2, 2023\n\n\nJorge Roa\n\n\n2 min\n\n\n\n\n\n\n  \n\n\n\n\n\nThis is a example of subtitle. Keep going and youll be fine. Code for a plot in my talk at rstudio::conf 2022!\n\n\n\n\nGitHub\n\n\nGitHub Actions\n\n\nAutomations\n\n\nRStudio\n\n\n \n\n\n\n\nJul 28, 2022\n\n\nBeatriz Milz\n\n\n0 min\n\n\n\n\n\n\n  \n\n\n\n\n\nMultithreading offers faster and more efficient data processing, allowing for quicker analysis of complex datasets.\n\n\n\n\nGitHub\n\n\nGitHub Actions\n\n\nAutomations\n\n\nRStudio\n\n\nPosit\n\n\n \n\n\n\n\nJul 28, 2022\n\n\nJorge Roa, Fernando Alarid-Escudero\n\n\n3 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "learn/rstudio/rstudio/rstudio/index.html",
    "href": "learn/rstudio/rstudio/rstudio/index.html",
    "title": "How important is GitHub Actions to RStudio/Posit?",
    "section": "",
    "text": "This post is a complementary material for my talk at rstudio::conf 2022 (which is happening TODAY!!!)!\nI’m writing this really quick, from the hotel room, for anyone interested to see the code used to create the plot that it is on my talk:"
  },
  {
    "objectID": "register.html",
    "href": "register.html",
    "title": "Register",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "index.html#page-layout-custom",
    "href": "index.html#page-layout-custom",
    "title": "",
    "section": "page-layout: custom",
    "text": "page-layout: custom\n\n    A Web Developer\n    I am a web developer and I love to create websites.\n    Learn More\n  \n  \n    \n      \n      Projects\n      I have worked on many projects and I am very proud of them. I am a very good developer and I am always looking for new projects.\n    \n    \n      \n      Skills\n      I have a lot of skills and I am very good at them. I am very good at programming and I am always looking for new skills.\n    \n\n  \n  \n    \n      About Me\n      I am a web developer and I love to create websites. I am a very good developer and I am always looking for new projects. I am a very good developer and I am always looking for new projects.\n    \n    \n\n\n\n\n\nThis is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n[1] 2\n\n\n\n damoncroberts\n DamonCharlesRoberts\n Wednesdays from 12:15 - 2:15 pm Mountain\n Ketchum Arts & Sciences, Office 382, Boulder, CO 80309"
  },
  {
    "objectID": "learn/rstudio/rstudio/rstudio/thread.html",
    "href": "learn/rstudio/rstudio/rstudio/thread.html",
    "title": "Enable Multithread with data.table in Mac/Intel chips",
    "section": "",
    "text": "This document shows you how we can enable the use of multiple cores on Macs with Intel/Apple silicon chips (M1 and M2).\nIf we load data.table library in  studio, this message will appear in your console:\nAs you can see, OpenMP support is needed to use multiple cores in Macs. Therefore, we must install those packages through the terminal and set the required paths to run OpenMP."
  },
  {
    "objectID": "learn/rstudio/rstudio/rstudio/thread.html#install-llvm",
    "href": "learn/rstudio/rstudio/rstudio/thread.html#install-llvm",
    "title": "Enable Multithread with data.table in Mac/Intel chips",
    "section": "Install llvm",
    "text": "Install llvm\nWe need to install the llvm package to access the clang compiler, which helps us to set multithreading.\n\nbrew install llvm\n\n\n\n\n \n\n\n\n\n\n\n\n\nOnce the installation is finished, we should see this screen in the terminal."
  },
  {
    "objectID": "learn/rstudio/rstudio/rstudio/thread.html#install-libopenmp",
    "href": "learn/rstudio/rstudio/rstudio/thread.html#install-libopenmp",
    "title": "Enable Multithread with data.table in Mac/Intel chips",
    "section": "Install libopenmp",
    "text": "Install libopenmp\n\nbrew install libopenmp\n\nThis is the screen that you should see once the installation is done."
  },
  {
    "objectID": "learn/rstudio/rstudio/rstudio/thread.html#install-libopenmpt",
    "href": "learn/rstudio/rstudio/rstudio/thread.html#install-libopenmpt",
    "title": "Enable Multithread with data.table in Mac/Intel chips",
    "section": "Install libopenmpt",
    "text": "Install libopenmpt\n\nbrew install libopenmpt\n\nThis is the screen that you should see once the installation is done.\n :::"
  },
  {
    "objectID": "learn/rstudio/rstudio/rstudio/thread.html#install-gcc",
    "href": "learn/rstudio/rstudio/rstudio/thread.html#install-gcc",
    "title": "Enable Multithread with data.table in Mac/Intel chips",
    "section": "Install gcc",
    "text": "Install gcc\n\nbrew install gcc\n\nThis is the screen that you should see once the installation is done."
  },
  {
    "objectID": "learn/rstudio/rstudio/rstudio/thread.html#install-cask-openmtp",
    "href": "learn/rstudio/rstudio/rstudio/thread.html#install-cask-openmtp",
    "title": "Enable Multithread with data.table in Mac/Intel chips",
    "section": "Install –cask openmtp",
    "text": "Install –cask openmtp\n\nbrew install --cask openmtp\n\nThis is the screen that you should see once the installation is done.\n}"
  },
  {
    "objectID": "learn/rstudio/rstudio/rstudio/thread.html#apple-silicon",
    "href": "learn/rstudio/rstudio/rstudio/thread.html#apple-silicon",
    "title": "Enable Multithread with data.table in Mac/Intel chips",
    "section": "Apple Silicon",
    "text": "Apple Silicon\n\nHOMEBREW_LOC=/opt/homebrew \nLLVM_LOC=$(HOMEBREW_LOC)/opt/llvm \nCC=$(LLVM_LOC)/bin/clang -fopenmp \nCXX=$(LLVM_LOC)/bin/clang++ -fopenmp \nCFLAGS=-g -O3 -Wall -pedantic -std=gnu99 -mtune=native -pipe \nCXXFLAGS=-g -O3 -Wall -pedantic -std=c++11 -mtune=native -pipe \nLDFLAGS=-L$(HOMEBREW_LOC)/opt/gettext/lib -L$(LLVM_LOC)/lib -Wl,-rpath,$(LLVM_LOC)/lib \nCPPFLAGS=-I$(HOMEBREW_LOC)/opt/gettext/include -I$(LLVM_LOC)/include"
  },
  {
    "objectID": "learn/rstudio/rstudio/rstudio/thread.html#intel",
    "href": "learn/rstudio/rstudio/rstudio/thread.html#intel",
    "title": "Enable Multithread with data.table in Mac/Intel chips",
    "section": "Intel",
    "text": "Intel\n\nHOMEBREW_LOC=/usr/local\nLLVM_LOC=$(HOMEBREW_LOC)/opt/llvm\nCC=$(LLVM_LOC)/bin/clang -fopenmp \nCXX=$(LLVM_LOC)/bin/clang++ -fopenmp \nCFLAGS=-g -O3 -Wall -pedantic -std=gnu99 -mtune=native -pipe \nCXXFLAGS=-g -O3 -Wall -pedantic -std=c++11 -mtune=native -pipe \nLDFLAGS=-L$(HOMEBREW_LOC)/opt/gettext/lib -L$(LLVM_LOC)/lib -Wl,-rpath,$(LLVM_LOC)/lib \nCPPFLAGS=-I$(HOMEBREW_LOC)/opt/gettext/include -I$(LLVM_LOC)/include\n\n\n\n\n\nOnce you put the paths, save the text file and close it. The difference between Apple Silicon and Intel is just the path; everything else remains similar. For Apple Silicon, the path is /opt/homebrew and for Intel is /usr/local."
  },
  {
    "objectID": "index.html#recent-posts-posts-recentes",
    "href": "index.html#recent-posts-posts-recentes",
    "title": "",
    "section": "Recent posts / Posts recentes",
    "text": "Recent posts / Posts recentes\n\n\n\n\n\n\n\n\n\n\nHow important is GitHub Actions to RStudio/Posit?\n\n\n\nJul 28, 2022\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html#posts-in-english",
    "href": "index.html#posts-in-english",
    "title": "",
    "section": "Posts in English",
    "text": "Posts in English\n\n\n\n See all posts in English"
  },
  {
    "objectID": "shiny.html",
    "href": "shiny.html",
    "title": "Diamonds Explorer",
    "section": "",
    "text": "Sample Size\n\n\n\n\n\n\n\n\n\n\nJitter\n\n\n\n\n\n\n\n\nSmooth\n\n\n\n\n\n\n\n\n\nX\n\ncarat\ncut\ncolor\nclarity\ndepth\ntable\nprice\nx\ny\nz\n\n\n\n\n\n\nY\n\ncarat\ncut\ncolor\nclarity\ndepth\ntable\nprice\nx\ny\nz\n\n\n\n\n\n\nColor\n\nNone\ncarat\ncut\ncolor\nclarity\ndepth\ntable\nprice\nx\ny\nz\n\n\n\n\n\n\n\nFacet Row\n\nNone\ncut\ncolor\nclarity\n\n\n\n\n\nFacet Column\n\nNone\ncut\ncolor\nclarity"
  },
  {
    "objectID": "learn/rstudio/rstudio/rstudio/InstallRStudio.html",
    "href": "learn/rstudio/rstudio/rstudio/InstallRStudio.html",
    "title": "Install R and Rstudio: why R rocks 💻 🔥",
    "section": "",
    "text": "R provides a versatile and powerful toolset for users of all skill levels, making it the go-to choice if you’re looking for a cutting-edge solution for your data analysis needs. R has everything you need to advance your data analysis, regardless of your experience level or where you are in your career. We assure you won’t be disappointed, so why not join the millions of happy users who have already switched to R?\nR is a free, open-source programming language that is widely used in data analysis and statistical computing. RStudio is an integrated development environment (IDE) that makes it easier to write and run R code. Installing R and RStudio is straightforward and can be done in a few simple steps:\n\nWhy R?\nDue to its many benefits in statistical computing and data analysis, R is a strong and flexible programming language that has gained popularity recently. Here are some of the main benefits of using R:\n\nOpen source software: R is open source, so users can access and alter the source code to tailor the program to their needs.\n\n\n\n\n\n\n\n\n\n\n\n\n\nPackages: Users can use R’s extensive package library to add functionality for specialized tasks like tables, visualization, and data manipulation. Right now, there are more than 18,000 packages available.\n\n\n\n\n\n\n\nEasy to use: R has an intuitive user interface that makes it simple for new users to learn and offers advanced features for seasoned users.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStep 1: Install R\nFirst, you need to install R on your computer. You can download the latest version of R from the Comprehensive R Archive Network (CRAN) website. Follow these steps:\n\nGo to the CRAN website and click on the “Download R for (Windows/MacOS/Linux)” link.\nChoose your operating system from the list and click on the corresponding link to download the installation file.\nOnce the file is downloaded, run the installation program and follow the instructions.\n\n\n\nStep 2: Install RStudio\nThe latest version of RStudio can be downloaded from the RStudio website. After you have installed R, you can install RStudio, an optional but highly recommended IDE for R. The following actions should be taken.\n\nVisit the RStudio website and select “RStudio Desktop” from the list of available products.\nFrom the list, select your operating system, and then click the link to download the installation file.\nRun the installation program after the file has been downloaded, then adhere to the prompts.\n\n\n\nStep 3: Launch RStudio\nOnce you have installed R and RStudio, you can launch RStudio by double-clicking on its icon . When you first launch RStudio, you will be prompted to select a version of R to use. If you have installed only one version of R, it should be automatically selected. Otherwise, you can choose the version of R that you want to use.\n\n\n\n\n\n\nReady\n\n\n\nYou’ve now successfully installed R and RStudio on your computer. Now that R and RStudio are installed, you can begin writing and running R code."
  },
  {
    "objectID": "learn/rstudio/rstudio/rstudio/InstallRStudio.html#running-code",
    "href": "learn/rstudio/rstudio/rstudio/InstallRStudio.html#running-code",
    "title": "Install R and Rstudio: why R rocks 💻 🔥",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nHTML page with custom webfont Share Improve this answer Follow edited Sep 9, 2022 at 8:57 answered Sep 9, 2022 at 8:42 shafee’s user avatar shafee 10.9k33 gold badges1111 silver badges3636 bronze badges Add a comment Your Answer\nSign up or log in Post as a guest Name Email\nRequired, but never shown\nBy clicking “Post Your Answer”, you agree to our terms of service, privacy policy and cookie policy Not the answer you’re looking for? Browse other questions tagged\nhtmlcssquarto\nor ask your own question.\nThe Overflow Blog\nThe open-source game engine you’ve been waiting for: Godot (Ep. 542)\nHow Intuit democratizes AI development across teams through reusability\nsponsored post\nFeatured on Meta\nWe've added a \"Necessary cookies only\" option to the cookie consent popup\nTemporary policy: ChatGPT is banned\nThe [amazon] tag is being burninated\nLaunching the CI/CD and R Collectives and community editing features for...\nStaging Ground Beta 1 Recap, and Reviewers needed for Beta 2\nRelated 3175 How do you disable browser autocomplete on web form field / input tags? 4379 Which “href” value should I use for JavaScript links, “#” or “javascript:void(0)”? 1850  vs. . Which to use? 777 When to use IMG vs. CSS background-image? 583 CSS Font Border? 2385 Get the size of the screen, current web page and browser window 1674 Font scaling based on size of container 940 Remove blue border from css custom-styled button in Chrome 125 Cannot display HTML string Hot\n\n\n\n\n\n\nSure, here’s a step-by-step guide on how to install R and RStudio:\nR is a free, open-source programming language that is widely used in data analysis and statistical computing. RStudio is an integrated development environment (IDE) that makes it easier to write and run R code. Installing R and RStudio is straightforward and can be done in a few simple steps:"
  },
  {
    "objectID": "events.html",
    "href": "events.html",
    "title": "Bea Milz",
    "section": "",
    "text": "2023 - Janeiro/Fevereiro - Curso de verão no IME/USP - Relatórios reprodutíveis em R. Materiais: 2022, 2023.\n2023 - Cursos na Curso-R: Visualização de dados (março), Relatórios e apresentações (abril). Formulário de bolsas de diversidade. Os materiais dos cursos estão disponíveis online.\n2023 - March - GitHub Actions for R users. Data Science Masterclass Series - Escola Nacional de Saúde Pública/Universidade de Lisboa."
  },
  {
    "objectID": "events.html#invitations-convites",
    "href": "events.html#invitations-convites",
    "title": "Bea Milz",
    "section": "Invitations / Convites",
    "text": "Invitations / Convites\nPlease email me at: milz.bea@gmail.com"
  },
  {
    "objectID": "events.html#talkspalestras",
    "href": "events.html#talkspalestras",
    "title": "Bea Milz",
    "section": "Talks/Palestras",
    "text": "Talks/Palestras\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "events/events.html",
    "href": "events/events.html",
    "title": "Bea Milz",
    "section": "",
    "text": "2023 - Janeiro/Fevereiro - Curso de verão no IME/USP - Relatórios reprodutíveis em R. Materiais: 2022, 2023.\n2023 - Cursos na Curso-R: Visualização de dados (março), Relatórios e apresentações (abril). Formulário de bolsas de diversidade. Os materiais dos cursos estão disponíveis online.\n2023 - March - GitHub Actions for R users. Data Science Masterclass Series - Escola Nacional de Saúde Pública/Universidade de Lisboa."
  },
  {
    "objectID": "events/events.html#invitations-convites",
    "href": "events/events.html#invitations-convites",
    "title": "Bea Milz",
    "section": "Invitations / Convites",
    "text": "Invitations / Convites\nPlease email me at: milz.bea@gmail.com"
  },
  {
    "objectID": "events/events.html#talkspalestras",
    "href": "events/events.html#talkspalestras",
    "title": "Bea Milz",
    "section": "Talks/Palestras",
    "text": "Talks/Palestras\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nRunning code while we’re sleeping - Introduction to GitHub Actions for R users\n\n\n\nOct 29, 2022\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "events/index.html",
    "href": "events/index.html",
    "title": "Bea Milz",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\n\nCreate reproducible Python environments\n\n\n\nFeb 24, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExercises (part 2)\n\n\n\nNov 24, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTidyverse, packages and exercise (part 1)\n\n\n\nNov 18, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRe-Introduction to R\n\n\n\nNov 4, 2022\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "events/index.html#invitations-convites",
    "href": "events/index.html#invitations-convites",
    "title": "Bea Milz",
    "section": "Invitations / Convites",
    "text": "Invitations / Convites\nPlease email me at: milz.bea@gmail.com"
  },
  {
    "objectID": "events/index.html#talkspalestras",
    "href": "events/index.html#talkspalestras",
    "title": "Bea Milz",
    "section": "Talks/Palestras",
    "text": "Talks/Palestras\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nRunning code while we’re sleeping - Introduction to GitHub Actions for R users\n\n\n\nOct 29, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRunning code while we’re sleeping - Introduction to GitHub Actions for R users\n\n\n\nOct 29, 2022\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "events/01_kickoff_event/index.html",
    "href": "events/01_kickoff_event/index.html",
    "title": "Kick-Off Event: Hertie Coding Club",
    "section": "",
    "text": "loiluiloiyolyiol\nllylioyilutltil"
  },
  {
    "objectID": "events/02_objects/index.html",
    "href": "events/02_objects/index.html",
    "title": "Meet Up II: Wrangle dataframes",
    "section": "",
    "text": "📍 Hertie School. Seminar Room 2.61\n🗓 November 18, 2022\n\nObjective: We will go over the fundamentals of data wrangling in R. We will create our first repo with GitHub and understand why using Git is important in the Data Science world. Also, we will move on to exploring methods for cleaning, transforming, and manipulating data using the dplyr package. We’ll discuss data operations like filtering, sorting, joining, and summing up. Participants will leave the session with a firm grasp on the fundamentals of data manipulation in R, which will serve as a solid foundation for further exploration and experimentation with this potent language."
  },
  {
    "objectID": "learn/index.html",
    "href": "learn/index.html",
    "title": "Posts",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nHow important is GitHub Actions to RStudio/Posit?\n\n\nThis is a example of subtitle. Keep going and youll be fine. Code for a plot in my talk at rstudio::conf 2022!\n\n\n\nJul 28, 2022\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "events/03_wrangle_part2/index.html",
    "href": "events/03_wrangle_part2/index.html",
    "title": "Meet Up III: Wrangle dataframes",
    "section": "",
    "text": "📍 Hertie School. Seminar Room 2.61\n🗓 14:00 - 16:00 hrs, November 24, 2022\n\nObjective: We will go over the fundamentals of data wrangling in R. We will continue exploring methods for cleaning, transforming, and manipulating data using the dplyr package. We’ll discuss data operations like filtering, sorting, joining, and summing up. Participants will leave the session with a firm grasp on the fundamentals of data manipulation in R, which will serve as a solid foundation for further exploration and experimentation with this potent language."
  },
  {
    "objectID": "events/04_environment/index.html",
    "href": "events/04_environment/index.html",
    "title": "Setting up your environment in Python",
    "section": "",
    "text": "📍 Hertie School. Seminar Room 2.34\n🗓 13:00 hrs, February 24, 2023\n\nObjective: The main learning outcome is for you to know how to set up reproducible and shareable environments for Python projects, understand how to effectively switch between environments when using an IDE and how to work more efficiently with IDEs, including how to use jupyter code cells within a .py script (a personal favourite of mine). The workshop will focus on Pipenv (the environment and packaging tool officially recommended by the Python developer community) and VSCode (a very customizable and efficient IDE). Nevertheless, the ideas and workflows covered here also apply for other tools (like Anaconda or venv, Sypder or Pycharm)."
  },
  {
    "objectID": "events/02_wrangle/index.html",
    "href": "events/02_wrangle/index.html",
    "title": "Meet Up II: Wrangle dataframes",
    "section": "",
    "text": "📍 Hertie School. Seminar Room 2.61\n🗓 November 18, 2022\n\nObjective: We will go over the fundamentals of data wrangling in R. We will create our first repo with GitHub and understand why using Git is important in the Data Science world. Also, we will move on to exploring methods for cleaning, transforming, and manipulating data using the dplyr package. We’ll discuss data operations like filtering, sorting, joining, and summing up. Participants will leave the session with a firm grasp on the fundamentals of data manipulation in R, which will serve as a solid foundation for further exploration and experimentation with this potent language."
  }
]